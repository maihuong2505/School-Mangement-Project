#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyTruongHoc.DB_Layer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanLyTruongHoc")]
	public partial class QuanLyTruongHocDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDangNhap(DangNhap instance);
    partial void UpdateDangNhap(DangNhap instance);
    partial void DeleteDangNhap(DangNhap instance);
    partial void InsertGiangDay(GiangDay instance);
    partial void UpdateGiangDay(GiangDay instance);
    partial void DeleteGiangDay(GiangDay instance);
    partial void InsertGiaoVien(GiaoVien instance);
    partial void UpdateGiaoVien(GiaoVien instance);
    partial void DeleteGiaoVien(GiaoVien instance);
    partial void InsertHoc(Hoc instance);
    partial void UpdateHoc(Hoc instance);
    partial void DeleteHoc(Hoc instance);
    partial void InsertHocSinh(HocSinh instance);
    partial void UpdateHocSinh(HocSinh instance);
    partial void DeleteHocSinh(HocSinh instance);
    partial void InsertKQHocTap(KQHocTap instance);
    partial void UpdateKQHocTap(KQHocTap instance);
    partial void DeleteKQHocTap(KQHocTap instance);
    partial void InsertLopHoc(LopHoc instance);
    partial void UpdateLopHoc(LopHoc instance);
    partial void DeleteLopHoc(LopHoc instance);
    #endregion
		
		public QuanLyTruongHocDataContext() : 
				base(global::QuanLyTruongHoc.Properties.Settings.Default.QuanLyTruongHocConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyTruongHocDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyTruongHocDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyTruongHocDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QuanLyTruongHocDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DangNhap> DangNhaps
		{
			get
			{
				return this.GetTable<DangNhap>();
			}
		}
		
		public System.Data.Linq.Table<GiangDay> GiangDays
		{
			get
			{
				return this.GetTable<GiangDay>();
			}
		}
		
		public System.Data.Linq.Table<GiaoVien> GiaoViens
		{
			get
			{
				return this.GetTable<GiaoVien>();
			}
		}
		
		public System.Data.Linq.Table<Hoc> Hocs
		{
			get
			{
				return this.GetTable<Hoc>();
			}
		}
		
		public System.Data.Linq.Table<HocSinh> HocSinhs
		{
			get
			{
				return this.GetTable<HocSinh>();
			}
		}
		
		public System.Data.Linq.Table<KQHocTap> KQHocTaps
		{
			get
			{
				return this.GetTable<KQHocTap>();
			}
		}
		
		public System.Data.Linq.Table<LopHoc> LopHocs
		{
			get
			{
				return this.GetTable<LopHoc>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DangNhap")]
	public partial class DangNhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGV;
		
		private string _MatKhau;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public DangNhap()
		{
			this._GiaoVien = default(EntityRef<GiaoVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_DangNhap", Storage="_GiaoVien", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.DangNhap = null;
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.DangNhap = this;
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(string);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiangDay")]
	public partial class GiangDay : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGV;
		
		private string _Lop;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
		private EntityRef<LopHoc> _LopHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnLopChanging(string value);
    partial void OnLopChanged();
    #endregion
		
		public GiangDay()
		{
			this._GiaoVien = default(EntityRef<GiaoVien>);
			this._LopHoc = default(EntityRef<LopHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lop", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Lop
		{
			get
			{
				return this._Lop;
			}
			set
			{
				if ((this._Lop != value))
				{
					if (this._LopHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLopChanging(value);
					this.SendPropertyChanging();
					this._Lop = value;
					this.SendPropertyChanged("Lop");
					this.OnLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_GiangDay", Storage="_GiaoVien", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.GiangDays.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.GiangDays.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(string);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_GiangDay", Storage="_LopHoc", ThisKey="Lop", OtherKey="Lop", IsForeignKey=true)]
		public LopHoc LopHoc
		{
			get
			{
				return this._LopHoc.Entity;
			}
			set
			{
				LopHoc previousValue = this._LopHoc.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc.Entity = null;
						previousValue.GiangDays.Remove(this);
					}
					this._LopHoc.Entity = value;
					if ((value != null))
					{
						value.GiangDays.Add(this);
						this._Lop = value.Lop;
					}
					else
					{
						this._Lop = default(string);
					}
					this.SendPropertyChanged("LopHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiaoVien")]
	public partial class GiaoVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGV;
		
		private string _HoTen;
		
		private string _GioiTinh;
		
		private System.DateTime _NgaySinh;
		
		private string _DiaChi;
		
		private string _SoDT;
		
		private string _MonGiangDay;
		
		private EntityRef<DangNhap> _DangNhap;
		
		private EntitySet<GiangDay> _GiangDays;
		
		private EntitySet<KQHocTap> _KQHocTaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDTChanging(string value);
    partial void OnSoDTChanged();
    partial void OnMonGiangDayChanging(string value);
    partial void OnMonGiangDayChanged();
    #endregion
		
		public GiaoVien()
		{
			this._DangNhap = default(EntityRef<DangNhap>);
			this._GiangDays = new EntitySet<GiangDay>(new Action<GiangDay>(this.attach_GiangDays), new Action<GiangDay>(this.detach_GiangDays));
			this._KQHocTaps = new EntitySet<KQHocTap>(new Action<KQHocTap>(this.attach_KQHocTaps), new Action<KQHocTap>(this.detach_KQHocTaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDT", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string SoDT
		{
			get
			{
				return this._SoDT;
			}
			set
			{
				if ((this._SoDT != value))
				{
					this.OnSoDTChanging(value);
					this.SendPropertyChanging();
					this._SoDT = value;
					this.SendPropertyChanged("SoDT");
					this.OnSoDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonGiangDay", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MonGiangDay
		{
			get
			{
				return this._MonGiangDay;
			}
			set
			{
				if ((this._MonGiangDay != value))
				{
					this.OnMonGiangDayChanging(value);
					this.SendPropertyChanging();
					this._MonGiangDay = value;
					this.SendPropertyChanged("MonGiangDay");
					this.OnMonGiangDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_DangNhap", Storage="_DangNhap", ThisKey="MaGV", OtherKey="MaGV", IsUnique=true, IsForeignKey=false)]
		public DangNhap DangNhap
		{
			get
			{
				return this._DangNhap.Entity;
			}
			set
			{
				DangNhap previousValue = this._DangNhap.Entity;
				if (((previousValue != value) 
							|| (this._DangNhap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DangNhap.Entity = null;
						previousValue.GiaoVien = null;
					}
					this._DangNhap.Entity = value;
					if ((value != null))
					{
						value.GiaoVien = this;
					}
					this.SendPropertyChanged("DangNhap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_GiangDay", Storage="_GiangDays", ThisKey="MaGV", OtherKey="MaGV")]
		public EntitySet<GiangDay> GiangDays
		{
			get
			{
				return this._GiangDays;
			}
			set
			{
				this._GiangDays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_KQHocTap", Storage="_KQHocTaps", ThisKey="MaGV", OtherKey="MaGV")]
		public EntitySet<KQHocTap> KQHocTaps
		{
			get
			{
				return this._KQHocTaps;
			}
			set
			{
				this._KQHocTaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GiangDays(GiangDay entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_GiangDays(GiangDay entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
		
		private void attach_KQHocTaps(KQHocTap entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = this;
		}
		
		private void detach_KQHocTaps(KQHocTap entity)
		{
			this.SendPropertyChanging();
			entity.GiaoVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hoc")]
	public partial class Hoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHS;
		
		private string _Lop;
		
		private EntityRef<HocSinh> _HocSinh;
		
		private EntityRef<LopHoc> _LopHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHSChanging(string value);
    partial void OnMaHSChanged();
    partial void OnLopChanging(string value);
    partial void OnLopChanged();
    #endregion
		
		public Hoc()
		{
			this._HocSinh = default(EntityRef<HocSinh>);
			this._LopHoc = default(EntityRef<LopHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHS", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHS
		{
			get
			{
				return this._MaHS;
			}
			set
			{
				if ((this._MaHS != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHSChanging(value);
					this.SendPropertyChanging();
					this._MaHS = value;
					this.SendPropertyChanged("MaHS");
					this.OnMaHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lop", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Lop
		{
			get
			{
				return this._Lop;
			}
			set
			{
				if ((this._Lop != value))
				{
					if (this._LopHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLopChanging(value);
					this.SendPropertyChanging();
					this._Lop = value;
					this.SendPropertyChanged("Lop");
					this.OnLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_Hoc", Storage="_HocSinh", ThisKey="MaHS", OtherKey="MaHS", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.Hoc = null;
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.Hoc = this;
						this._MaHS = value.MaHS;
					}
					else
					{
						this._MaHS = default(string);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_Hoc", Storage="_LopHoc", ThisKey="Lop", OtherKey="Lop", IsForeignKey=true)]
		public LopHoc LopHoc
		{
			get
			{
				return this._LopHoc.Entity;
			}
			set
			{
				LopHoc previousValue = this._LopHoc.Entity;
				if (((previousValue != value) 
							|| (this._LopHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LopHoc.Entity = null;
						previousValue.Hocs.Remove(this);
					}
					this._LopHoc.Entity = value;
					if ((value != null))
					{
						value.Hocs.Add(this);
						this._Lop = value.Lop;
					}
					else
					{
						this._Lop = default(string);
					}
					this.SendPropertyChanged("LopHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HocSinh")]
	public partial class HocSinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHS;
		
		private string _HoVaTen;
		
		private string _GioiTinh;
		
		private System.DateTime _NgaySinh;
		
		private string _DiaChi;
		
		private EntityRef<Hoc> _Hoc;
		
		private EntitySet<KQHocTap> _KQHocTaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHSChanging(string value);
    partial void OnMaHSChanged();
    partial void OnHoVaTenChanging(string value);
    partial void OnHoVaTenChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public HocSinh()
		{
			this._Hoc = default(EntityRef<Hoc>);
			this._KQHocTaps = new EntitySet<KQHocTap>(new Action<KQHocTap>(this.attach_KQHocTaps), new Action<KQHocTap>(this.detach_KQHocTaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHS", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHS
		{
			get
			{
				return this._MaHS;
			}
			set
			{
				if ((this._MaHS != value))
				{
					this.OnMaHSChanging(value);
					this.SendPropertyChanging();
					this._MaHS = value;
					this.SendPropertyChanged("MaHS");
					this.OnMaHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoVaTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoVaTen
		{
			get
			{
				return this._HoVaTen;
			}
			set
			{
				if ((this._HoVaTen != value))
				{
					this.OnHoVaTenChanging(value);
					this.SendPropertyChanging();
					this._HoVaTen = value;
					this.SendPropertyChanged("HoVaTen");
					this.OnHoVaTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_Hoc", Storage="_Hoc", ThisKey="MaHS", OtherKey="MaHS", IsUnique=true, IsForeignKey=false)]
		public Hoc Hoc
		{
			get
			{
				return this._Hoc.Entity;
			}
			set
			{
				Hoc previousValue = this._Hoc.Entity;
				if (((previousValue != value) 
							|| (this._Hoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hoc.Entity = null;
						previousValue.HocSinh = null;
					}
					this._Hoc.Entity = value;
					if ((value != null))
					{
						value.HocSinh = this;
					}
					this.SendPropertyChanged("Hoc");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_KQHocTap", Storage="_KQHocTaps", ThisKey="MaHS", OtherKey="MaHS")]
		public EntitySet<KQHocTap> KQHocTaps
		{
			get
			{
				return this._KQHocTaps;
			}
			set
			{
				this._KQHocTaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KQHocTaps(KQHocTap entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = this;
		}
		
		private void detach_KQHocTaps(KQHocTap entity)
		{
			this.SendPropertyChanging();
			entity.HocSinh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KQHocTap")]
	public partial class KQHocTap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHS;
		
		private string _MaGV;
		
		private double _KT15P;
		
		private double _KT1T;
		
		private double _DiemThi;
		
		private double _DiemTB;
		
		private EntityRef<GiaoVien> _GiaoVien;
		
		private EntityRef<HocSinh> _HocSinh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHSChanging(string value);
    partial void OnMaHSChanged();
    partial void OnMaGVChanging(string value);
    partial void OnMaGVChanged();
    partial void OnKT15PChanging(double value);
    partial void OnKT15PChanged();
    partial void OnKT1TChanging(double value);
    partial void OnKT1TChanged();
    partial void OnDiemThiChanging(double value);
    partial void OnDiemThiChanged();
    partial void OnDiemTBChanging(double value);
    partial void OnDiemTBChanged();
    #endregion
		
		public KQHocTap()
		{
			this._GiaoVien = default(EntityRef<GiaoVien>);
			this._HocSinh = default(EntityRef<HocSinh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHS", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHS
		{
			get
			{
				return this._MaHS;
			}
			set
			{
				if ((this._MaHS != value))
				{
					if (this._HocSinh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHSChanging(value);
					this.SendPropertyChanging();
					this._MaHS = value;
					this.SendPropertyChanged("MaHS");
					this.OnMaHSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGV", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGV
		{
			get
			{
				return this._MaGV;
			}
			set
			{
				if ((this._MaGV != value))
				{
					if (this._GiaoVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGVChanging(value);
					this.SendPropertyChanging();
					this._MaGV = value;
					this.SendPropertyChanged("MaGV");
					this.OnMaGVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KT15P", DbType="Float NOT NULL")]
		public double KT15P
		{
			get
			{
				return this._KT15P;
			}
			set
			{
				if ((this._KT15P != value))
				{
					this.OnKT15PChanging(value);
					this.SendPropertyChanging();
					this._KT15P = value;
					this.SendPropertyChanged("KT15P");
					this.OnKT15PChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KT1T", DbType="Float NOT NULL")]
		public double KT1T
		{
			get
			{
				return this._KT1T;
			}
			set
			{
				if ((this._KT1T != value))
				{
					this.OnKT1TChanging(value);
					this.SendPropertyChanging();
					this._KT1T = value;
					this.SendPropertyChanged("KT1T");
					this.OnKT1TChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemThi", DbType="Float NOT NULL")]
		public double DiemThi
		{
			get
			{
				return this._DiemThi;
			}
			set
			{
				if ((this._DiemThi != value))
				{
					this.OnDiemThiChanging(value);
					this.SendPropertyChanging();
					this._DiemThi = value;
					this.SendPropertyChanged("DiemThi");
					this.OnDiemThiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTB", DbType="Float NOT NULL")]
		public double DiemTB
		{
			get
			{
				return this._DiemTB;
			}
			set
			{
				if ((this._DiemTB != value))
				{
					this.OnDiemTBChanging(value);
					this.SendPropertyChanging();
					this._DiemTB = value;
					this.SendPropertyChanged("DiemTB");
					this.OnDiemTBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiaoVien_KQHocTap", Storage="_GiaoVien", ThisKey="MaGV", OtherKey="MaGV", IsForeignKey=true)]
		public GiaoVien GiaoVien
		{
			get
			{
				return this._GiaoVien.Entity;
			}
			set
			{
				GiaoVien previousValue = this._GiaoVien.Entity;
				if (((previousValue != value) 
							|| (this._GiaoVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiaoVien.Entity = null;
						previousValue.KQHocTaps.Remove(this);
					}
					this._GiaoVien.Entity = value;
					if ((value != null))
					{
						value.KQHocTaps.Add(this);
						this._MaGV = value.MaGV;
					}
					else
					{
						this._MaGV = default(string);
					}
					this.SendPropertyChanged("GiaoVien");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HocSinh_KQHocTap", Storage="_HocSinh", ThisKey="MaHS", OtherKey="MaHS", IsForeignKey=true)]
		public HocSinh HocSinh
		{
			get
			{
				return this._HocSinh.Entity;
			}
			set
			{
				HocSinh previousValue = this._HocSinh.Entity;
				if (((previousValue != value) 
							|| (this._HocSinh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HocSinh.Entity = null;
						previousValue.KQHocTaps.Remove(this);
					}
					this._HocSinh.Entity = value;
					if ((value != null))
					{
						value.KQHocTaps.Add(this);
						this._MaHS = value.MaHS;
					}
					else
					{
						this._MaHS = default(string);
					}
					this.SendPropertyChanged("HocSinh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopHoc")]
	public partial class LopHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Lop;
		
		private string _Phong;
		
		private EntitySet<GiangDay> _GiangDays;
		
		private EntitySet<Hoc> _Hocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLopChanging(string value);
    partial void OnLopChanged();
    partial void OnPhongChanging(string value);
    partial void OnPhongChanged();
    #endregion
		
		public LopHoc()
		{
			this._GiangDays = new EntitySet<GiangDay>(new Action<GiangDay>(this.attach_GiangDays), new Action<GiangDay>(this.detach_GiangDays));
			this._Hocs = new EntitySet<Hoc>(new Action<Hoc>(this.attach_Hocs), new Action<Hoc>(this.detach_Hocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lop", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Lop
		{
			get
			{
				return this._Lop;
			}
			set
			{
				if ((this._Lop != value))
				{
					this.OnLopChanging(value);
					this.SendPropertyChanging();
					this._Lop = value;
					this.SendPropertyChanged("Lop");
					this.OnLopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phong", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Phong
		{
			get
			{
				return this._Phong;
			}
			set
			{
				if ((this._Phong != value))
				{
					this.OnPhongChanging(value);
					this.SendPropertyChanging();
					this._Phong = value;
					this.SendPropertyChanged("Phong");
					this.OnPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_GiangDay", Storage="_GiangDays", ThisKey="Lop", OtherKey="Lop")]
		public EntitySet<GiangDay> GiangDays
		{
			get
			{
				return this._GiangDays;
			}
			set
			{
				this._GiangDays.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_Hoc", Storage="_Hocs", ThisKey="Lop", OtherKey="Lop")]
		public EntitySet<Hoc> Hocs
		{
			get
			{
				return this._Hocs;
			}
			set
			{
				this._Hocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GiangDays(GiangDay entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = this;
		}
		
		private void detach_GiangDays(GiangDay entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = null;
		}
		
		private void attach_Hocs(Hoc entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = this;
		}
		
		private void detach_Hocs(Hoc entity)
		{
			this.SendPropertyChanging();
			entity.LopHoc = null;
		}
	}
}
#pragma warning restore 1591
